--enable-f77 -enable-fc --enable-f90 --enable-cxx --enable-romio  --enable-static  --with-ib-include --with-ib-libpath=path   --with-rdma  --with-hwloc --enable-romio --with-file-system=lustre+nfs  --with-device=ch_gen2 --with-arch=LINUX  --with-device=ch3:mrail --with-rdma=gen2 --enable-shared  --enable-g=dbg --enable-debuginfo

MVAPICH and MVAPICH2 is an implementation of MPI for computing systems and servers using InfiniBand, 10GigE/iWARP and RoCE & etc networking technologies.

Installation consists of downloading the tarball into an appropriate directory, extracting it, loading the enviroment variable modules, using of some previously established configuration files, runnig make and make install, and establishing the symbolic links. Note that MVAPICH and MVAPICH2 are entirely different products.


cd /usr/local/src/MVAPICH2
wget http://mvapich.cse.ohio-state.edu/download/mvapich2/mvapich2-1.5.tgz
tar xvf mvapich2-1.5.tgz
cd mvapich2-1.5
module load gcc
../config-mvapich-gcc
make
make install
make clean
../config-mvapich-intel
make
make install
make clean
../config-mvapich-pgi
make
make install
make clean
cd /usr/local/Modules/modulefiles/mvapich2
ln -s .base 1.5-gcc
ln -s .base 1.5-pgi
ln -s .base 1.5-intel

The .base file consists of the following:


#%Module1.0#####################################################################
##
## $name modulefile
##
set ver [lrange [split [ module-info name ] / ] 1 1 ]
set name [lrange [split [ module-info name ] / ] 0 0 ]
set loading [module-info mode load]
set subver [lrange [split $ver - ] 0 0 ]
set compiler [lrange [split $ver - ] 1 1 ]
proc ModulesHelp { } {
puts stderr "\tThis module sets the envinronment for $name v$ver"
}
module-whatis "Set environment variables to use $name version $ver"
if { $loading && ![ is-loaded $compiler ] } {
module load $compiler
}
prepend-path --delim " " CPPFLAGS -I/usr/local/$name/$subver-$compiler/include
prepend-path --delim " " LDFLAGS -L/usr/local/$name/$subver-$compiler/lib
prepend-path LD_LIBRARY_PATH /usr/local/$name/$subver-$compiler/lib
prepend-path MANPATH /usr/local/$name/$subver-$compiler/share/man
prepend-path PATH /usr/local/$name/$subver-$compiler/bin
setenv MPI_DIR /usr/local/$name/$subver-$compiler/
setenv MPI_HOME /usr/local/$name/$subver-$compiler/

The configuration files are as follows:

config-mvapich-gcc

#!/bin/bash
INST=$(basename $(pwd) | sed 's/mvapich-//')-gcc
SHARED_LIBS=yes F77=gfortran F90=gfortran CC=gcc CXX=g++ IBHOME=/usr ROMIO=yes PREFIX=/usr/local/mvapich/$INST ./make.mvapich.gen2

config-mvapich2-intel

#!/bin/bash
INST=$(basename $(pwd) | sed 's/mvapich2-//')
F77=ifort F90=ifort CC=icc CXX=icpc ./configure --prefix=/usr/local/mvapich2/$INST-intel --with-rdma=gen2 --enable-romio --enable-sharedlibs=gcc

config-mvapich2-pgi

#!/bin/bash
INST=$(basename $(pwd) | sed 's/mvapich2-//')
F77=pgf95 F90=pgf95 CC=pgcc CXX=pgcpp ./configure --prefix=/usr/local/mvapich2/$INST-pgi --with-rdma=gen2 --enable-romio --enable-sharedlibs=gcc







    Untar the MVAPICH package:

      tar -xvzf mvapich-1.2rc1.tar.gz
      cd mvapich-1.2rc1

    To use the default configuration edit the file make.mvapich.gen2 and set the "CC" variable to "pgcc". The script also has the ability to automatically detect whether the platform has support for RDMAoE and configure the library to use it accordingly. For RDMAoE functionality to work properly, a version of OFED from the OFED-1.5-RDMAoE branch must be installed on all the systems.

      ./configure --prefix=/usr/local/mvapich >&  configure.log

    There are some common configuration options to the default configuration that might be of interest.

      ./configure --enable-sharedlib       # enables shared libraries
      ./configure --enable-sharedlib --enable-debug  # enables debugging for TotalView
      ./configure --with-romio --with-file-system=lustre+nfs+pvfs2 # enables optimized drivers for 
      the listed filesystems 

    Build the code:

      make >& make.log   

    Install the code:

      sudo su
      make install

    To build MVAPICH with OpenFabrics/Gen2 Hybrid Mode (Gen2-Hybrid) edit the file make.mvapich.hybrid and set the "CC" variable to "pgcc":

      ./configure --prefix=/usr/local/mvapich >&  configure.log

    There are some common configuration options to the default configuration that might be of interest:

      ./configure --enable-sharedlib       # enables shared libraries
      ./configure --enable-sharedlib --enable-debug  # enables debugging for TotalView

    Build the code:

      make >& make.log   

    Install the code:

      sudo su
      make install

    After you have successfully installed the MVAPICH library you can use mpirun_rsh -np <number> -hostfile ~/.hosts my_MPI_example to launch your MPI jobs over you InfiniBand fabric.

Building and Installing MVAPICH2

    Untar the MVAPICH2 package:

      tar -xvzf mvapich2-1.8a1p1.tar.gz
      cd mvapich2-1.8a1p1

    The simplest way to get started with MVAPICH2 is simply:

      env CC=pgcc ./configure --prefix=/usr/local/mvapich2  >& configure.log

    There are some common configuration options to the default configuration that might be of interest.

    OpenFabrics (OFA) IB/iWARP/RoCE with the CH3 channel is the default interface on Linux. It 
    can be explicitly selected by configuring with:

      ./configure --with-device=ch3:mrail --with-rdma=gen2

    In order to use shared libraries configure as follows:

      ./configure --with-device=ch3:mrail --with-rdma=gen2 --enable-shared

    To enable use of the TotalView debugger, the library needs to be configured in the following 
    manner:

      ./configure --with-device=ch3:mrail --with-rdma=gen2 --enable-shared  --enable-g=dbg      \
      --enable-debuginfo

    Configuration Options for OpenFabrics IB/iWARP/RoCE

        Configuring with Shared Libraries
            Default: Disabled
            Enable: --enable-shared
        Configuring with TotalView support
            Default: Disabled
            Enable: --enable-g=dbg --enable-shared --enable-debuginfo
        Path to OpenFabrics Header Files
            Default: Your PATH
            Specify: --with-ib-include=path
        Path to OpenFabrics Libraries
            Default: The systems search path for libraries.
            Specify: --with-ib-libpath=path
        Support for Hybrid UD-RC/XRC transports
            Default: Disabled
            Enable: --enable-hybrid
        Support for RDMA CM
            Default: enabled, except when BLCR support is enabled
            Disable: --disable-rdma-cm
        Support for RoCE
            Default: enabled
            For RoCE functionality to work properly, a version of OFED from the OFED-1.5-RoCE 
            branch must be installed on all the systems.
        Registration Cache
            Default: enabled
            Disable: --disable-registration-cache
        ADIO driver for Lustre:
            When compiled with this support, MVAPICH2 will use the optimized driver for 
            Lustre. In order to enable this feature, the flag
            --enable-romio --with-file-system=lustre
            should be passed to configure (--enable-romio is optional as it is enabled by 
            default). You can add support for more file systems using
            --enable-romio --with-file-system=lustre+nfs+pvfs2
        LiMIC2 Support
            Default: disabled
            Enable:
            --with-limic2[=]
            --with-limic2-include=
            --with-limic2-libpath=
        Header Caching
            Default: enabled
            Disable: --disable-header-caching
        Checkpoint/Restart
            Option name: --enable-ckpt
            Require: Berkeley Lab Checkpoint/Restart (BLCR)
            Default: disabled

        The Berkeley Lab Checkpoint/Restart (BLCR) installation is automatically detected if 
        installed in the standard location. To specify an alternative path to the BLCR 
         installation, you can either use:
        --with-blcr=
        or
        --with-blcr-include=
        --with-blcr-libpath=

        Process Migration
            Option name: --enable-ckpt-migration
            Automatically enable Checkpoint/Restart
            Require: Fault Tolerance Backplane (FTB)
            Default: disabled

        The Fault Tolerance Backplane (FTB) installation is automatically detected if installed 
        in the standard location. To specify an alternative path to the FTB installation, you can 
        either use:
        --with-ftb=
        or
        --with-ftb-include=
        --with-ftb-libpath=

        Checkpoint Aggregation
            Option name: --enable-ckpt-aggregation or --disable-ckpt-aggregation
            Automatically enable Checkpoint/Restart
            Require: Filesystem in Userspace (FUSE)
            Default: enabled (if Checkpoint/Restart enabled and FUSE is present)

        The Filesystem in Userspace (FUSE) installation is automatically detected if installed 
        in the standard location. To specify an alternative path to the FUSE installation, you 
         can either use:
        --with-fuse=
        or
        --with-fuse-include=
        --with-fuse-libpath=

        eXtended Reliable Connection
            Default: disabled
            Enable: --enable-xrc
        HWLOC Support (Affinity)
            Default: enabled
            Disable: --without-hwloc
        Support for 64K or greater number of cores
            Default: 64K or lower number of cores
            Enable: --with-ch3-rank-bits=32

    Build the code:

      make >& make.log   

    Install the code:

      sudo su
      make install

    After you have successfully installed the MVAPICH2 library you can use mpirun_rsh -np <number> -hostfile ~/.hosts my_MPI_example to launch your MPI jobs over you InfiniBand fabric.

Known Issues and Limitations

For MVAPICH2 build issues with PGI 12.2, in the two files listed below change

#if !defined(_GNU_SOURCE)

to

#if !defined(_GNU_SOURCE) || !defined(__cplusplus)

/opt/pgi/linux86-64/12.2/include/float.h
/opt/pgi/linux86-64/12.2/include/limits.h 


ry specifying the MVAPICH2 channel explicitly. For the traditional mrail channel, run configure as

./configure --with-device=ch3:mrail --with-rdma=gen2

Or, for the Nemesis channel with IB netmod

./configure --with-device=ch3:nemesis:ib


 F77=lf95 FC=lf95  FCFLAGS=/pkg/lf95/8.1/include64

CFLAGS='-fpic -shared'
#!/bin/bash
./configure --prefix=/pkg/mvapich2/1.9a2/$PRG_ENV --enable-g=all --enable-error-messages=all --with-device=ch3:mrail --with-rdma=gen2 --enable-shared --enable-g=dbg --enable-debuginfo --with-ib-include=/usr  --with-ib-libpath=/usr --enable-romio --with-file-system=lustre --with-hwloc  --enable-threads=default >& $LOG/mvapich/$PRG_ENV/configure.log &



make -j 4 >& $LOG/mvapich/$PRG_ENV/make.log &

make install >& $LOG/mvapich/$PRG_ENV/makeinstall.log &

LIB='/usr/lib/gcc/x86_64-redhat-linux/4.4.7/libgcc.a -shared '

LIBS='-lgcc'
unset F90
unset F90FLAGS

F77=/pkg/lf95/8.1/bin/lf95  FC=/pkg/lf95/8.1/bin/lf95  ./configure --prefix=/pkg/mvapich2/1.9a2/lf95-8  --enable-f77  --enable-fc --enable-cxx  --enable-g=all  --enable-error-messages=all  --with-device=ch3:mrail  --with-rdma=gen2  --enable-shared  --enable-debuginfo  --with-ib-include=/usr  --with-ib-libpath=/usr  --enable-romio  --with-file-system=lustre --with-hwloc --enable-threads=default >& $LOG/mvapich2/1.9a2/$PRG_ENV/configure.log &

./configure --prefix=/pkg/mvapich2/2.1a/$PRG_ENV --enable-g=all --enable-fortran=all --enable-cxx --enable-romio --enable-debuginfo  --enable-threads=multiple  --enable-wrapper-rpath --enable-error-messages=all --with-device=ch3:mrail --with-rdma=gen2 --with-gnu-ld --with-ib-include=/usr  --with-ib-libpath=/usr  >& configure.log & 
